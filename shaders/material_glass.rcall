#version 460 core
#extension GL_EXT_ray_tracing : enable

~include "shaders/common.glsl"
~include "shaders/random.glsl"
~include "shaders/payload.glsl"
~include "shaders/texture_data.glsl"
~include "shaders/sampling.glsl"

layout(location = 0) callableDataInEXT MaterialPayload material_payload;


void main() {
    if (seed_random(material_payload.seed) < 0.00) {
        // reflection
        vec3 reflection = reflect(material_payload.direction, material_payload.normal);
        material_payload.sample_direction = reflection;
    } else {
        // refraction
        float eta = 1.0 / 1.5;
        vec3 refraction;
        if (dot(material_payload.direction, material_payload.normal) < 0) {
            refraction = refract(material_payload.direction, material_payload.normal, eta);
        } else {
            refraction = refract(material_payload.direction, -material_payload.normal, 1.0 / eta);
        }
        material_payload.sample_direction = refraction;
    }

    material_payload.surface_color = vec3(1.0);
    material_payload.sample_pdf = 1.0;
}