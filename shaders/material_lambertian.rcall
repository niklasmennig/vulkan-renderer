#version 460 core
#extension GL_EXT_ray_tracing : enable

~include "shaders/common.glsl"
~include "shaders/random.glsl"
~include "shaders/payload.glsl"
~include "shaders/texture_data.glsl"

layout(location = 0) callableDataInEXT MaterialPayload material_payload;

vec3 cosine_weighted_sample_hemisphere(float u1, float u2)
{
    float theta = 0.5 * acos(-2.0 * u1 + 1.0);
    float phi = u2 * 2.0 * PI;

    float x = cos(phi) * sin(theta);
    float y = sin(phi) * sin(theta);
    float z = cos(theta);

    return vec3(x, y, z);
}


void main() {
    material_payload.surface_color = sample_texture(material_payload.instance, material_payload.uv);
    material_payload.emission = vec3(0);

    vec3 t, bt;
    basis(material_payload.normal, t, bt);

    vec3 sample_dir = cosine_weighted_sample_hemisphere(seed_random(material_payload.seed), seed_random(material_payload.seed));

    material_payload.direction = material_payload.normal * sample_dir.z + t * sample_dir.x + bt * sample_dir.y;
}