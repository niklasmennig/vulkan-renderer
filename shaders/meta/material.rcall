#version 460 core
#extension GL_EXT_ray_tracing : enable


struct RayPayload
{
    // ray data
    uint depth;
    float seed;
    bool hit;
    
    // hit data
    uint instance;
    vec3 position;
    vec3 normal;
    vec2 uv;
};


struct MaterialPayload
{
    // hit data
    uint instance;
    vec3 position;
    vec3 normal;
    vec2 uv;

    // output data
    vec3 emission;
    vec3 surface_color;
    vec3 direction;
};
layout(set = 1, binding = 8) uniform sampler2D tex[16];
layout(set = 1, binding = 9) readonly buffer TextureIndexData {uint data[];} texture_indices;

vec3 sample_texture(uint instance, vec2 uv) {
    return texture(tex[texture_indices.data[instance]], uv).rgb;
}
layout(location = 0) callableDataInEXT MaterialPayload material_payload;

void main() {
    material_payload.surface_color = sample_texture(material_payload.instance, material_payload.uv);
    material_payload.direction = reflect(material_payload.direction, material_payload.normal);
}